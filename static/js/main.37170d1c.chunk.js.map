{"version":3,"sources":["context.js","Cards.jsx","App.js","useFetch.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","spaceBlogs","setSpaceBlogs","Provider","value","useGlobalContext","useContext","Cards","imageUrl","title","publishedAt","summary","newsSite","Date","toDateString","className","src","alt","App","url","getCats","a","fetch","res","json","data","console","log","useEffect","useFetch","map","item","index","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,EAAaC,0BAEbC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACAC,mBAAS,IADT,mBAC7BC,EAD6B,KACjBC,EADiB,KAEpC,OACE,cAACN,EAAWO,SAAZ,CAAqBC,MAAO,CAAEH,aAAYC,iBAA1C,SACGH,KAKDM,EAAmB,WACvB,OAAOC,qBAAWV,ICELW,EAhBD,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAGtD,OAFAF,EAAc,IAAIG,KAAKH,GAAaI,eAGlC,sBAAKC,UAAU,YAAf,UACE,qBAAKC,IAAKR,EAAUS,IAAI,KACxB,wBAAQF,UAAU,MAAlB,SAAyBH,IACzB,sBAAKG,UAAU,UAAf,UACE,6BAAKN,IACL,4BAAIE,IACJ,+BAAOD,WCUAQ,MAbf,YCJiB,SAACC,GAAS,IACjBjB,EAAkBG,IAAlBH,cAEFkB,EAAO,uCAAG,8BAAAC,EAAA,+EAEMC,MAAMH,GAFZ,cAENI,EAFM,gBAGOA,EAAIC,OAHX,OAGNC,EAHM,OAKZC,QAAQC,IAAIF,GAEZvB,EAAcuB,GAPF,kDASZC,QAAQC,IAAR,MACAzB,EAAc,IAVF,0DAAH,qDAcb0B,qBAAU,kBAAMR,MAAW,IDZ3BS,CAHW,+DAEE,IAEL5B,EAAeI,IAAfJ,WAER,OACE,qBAAKc,UAAU,YAAf,SACGd,EAAW6B,KAAI,SAACC,EAAMC,GACrB,OAAO,cAAC,EAAD,eAAuBD,GAAXC,SET3BC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.37170d1c.chunk.js","sourcesContent":["import { useState, createContext, useContext } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [spaceBlogs, setSpaceBlogs] = useState([]);\r\n  return (\r\n    <AppContext.Provider value={{ spaceBlogs, setSpaceBlogs }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { useGlobalContext, AppProvider };\r\n","const Cards = ({ imageUrl, title, publishedAt, summary, newsSite }) => {\r\n  publishedAt = new Date(publishedAt).toDateString();\r\n\r\n  return (\r\n    <div className=\"blog card\">\r\n      <img src={imageUrl} alt=\"\" />\r\n      <button className=\"btn\">{newsSite}</button>\r\n      <div className=\"details\">\r\n        <h2>{title}</h2>\r\n        <p>{summary}</p>\r\n        <span>{publishedAt}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import \"./App.css\";\nimport { useFetch } from \"./useFetch\";\nimport { useGlobalContext } from \"./context\";\nimport Cards from \"./Cards.jsx\";\n\nconst API_URL = `https://test.spaceflightnewsapi.net/api/v2/blogs?_limit=100`;\n\nfunction App() {\n  useFetch(API_URL);\n  const { spaceBlogs } = useGlobalContext();\n\n  return (\n    <div className=\"container\">\n      {spaceBlogs.map((item, index) => {\n        return <Cards key={index} {...item} />;\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst useFetch = (url) => {\r\n  const { setSpaceBlogs } = useGlobalContext();\r\n\r\n  const getCats = async () => {\r\n    try {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      console.log(data);\r\n\r\n      setSpaceBlogs(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setSpaceBlogs([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => getCats(), []);\r\n};\r\n\r\nexport { useFetch };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}